#
# otsslides.conf v0.3
#
# Asciidoc backend plugin Configuration file 
# otsslides backend plugin, generates OpenTechSchool Showr slides
# inspired by slidy2 and deck.js

include::{asciidoc-confdir=../..}/html5.conf[]
:backend-otsslides:

[miscellaneous]
outfilesuffix=.html

[attributes]
basebackend=html
basebackend-html=
backend-otsslides=

[macros]
^>{3,}$=#nopagebreak
(?u)^(?P<name>video)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#

(?u)^(?P<name>images)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#

(?u)^(?P<name>background)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#

[background-blockmacro]
<img src="{data-uri}{target}" alt="{0}" class="background" />

[images-blockmacro]
<div style="margin-left: 4em; position: relative;"{incremental? class="incremental"}> 
{data-uri%}{1#}<img src="{1}" alt="{1}" style="position: static; vertical-align: bottom" /> 
{data-uri%}{2#}<img src="{2}" alt="{2}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{3#}<img src="{3}" alt="{3}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{4#}<img src="{4}" alt="{4}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{5#}<img src="{5}" alt="{5}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{6#}<img src="{6}" alt="{6}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{7#}<img src="{7}" alt="{7}" style="position: absolute; left: 0; top: 0" /> 
{data-uri%}{target#}<img src="{target}" alt="{target}" style="position: absolute; left: 0; top: 0" /> 
{data-uri#}{1#}<img alt="{alt={1}}" style="position: static; vertical-align: bottom"  src="data:image/{eval:os.path.splitext(r'{1}')[1][1:]};base64,
{data-uri#}{1#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{1}")}"}" />
{data-uri#}{2#}<img alt="{alt={2}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{2#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{2}")}"}" />
{data-uri#}{3#}<img alt="{alt={3}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{3#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{3}")}"}" />
{data-uri#}{4#}<img alt="{alt={4}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{4#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{4}")}"}" />
{data-uri#}{5#}<img alt="{alt={5}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{5#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{5}")}"}" />
{data-uri#}{6#}<img alt="{alt={6}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{6#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{6}")}"}" />
{data-uri#}{7#}<img alt="{alt={7}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{7#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{7}")}"}" />
{data-uri#}{target#}<img alt="{alt={target}}" style="position: absolute; left: 0; top: 0"  src="data:image/png;base64,
{data-uri#}{target#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{target}")}"}" />
</div> 

[nopagebreak-blockmacro]
{set:slidepagebreak!}

[pagebreak-blockmacro]
</div></div>
<script type="text/javascript">/*<![CDATA[*/if (slidefootnotes != ''){document.write("<hr/><p>"+slidefootnotes+"</p>");}/*]]>*/</script>
{slidepagebreak}</div><div class="slide{slidebackground? {slidebackground}}">
<div class="sect1{style? {style}}{role? {role}}">
<script type="text/javascript">/*<![CDATA[*/subslide +=1;document.write("<h1 class='"+nextclass+"'>"+nexttitle+" ("+ subslide+")</h1>");slidefootnotes="";/*]]>*/</script>
# Set max-width here because Slidy ignores max-width on body.
<div class="sectionbody"{max-width? style="max-width:{max-width}"}>
{set:slidepagebreak}

[openblock]
<div class="openblock{incremental? incremental}{role? {role}}"{id? id="{id}"}>
<div class="title">{title}</div>
<div class="content">
|
</div></div>

[footnote-inlinemacro]
# footnote:[<text>].
###<span class="footnote"><br />[{0}]<br /></span>
<script type="text/javascript">/*<![CDATA[*/slidefootnotes += "<div class='footnote'>[{counter:slidefootnotenumber}] : {0}</div>" ;/*]]>*/</script>
[{slidefootnotenumber}]

[footnoteref-inlinemacro]
# footnoteref:[<id>], create reference to footnote.
{2%}[{1}]
# footnoteref:[<id>,<text>], create footnote with ID.
{2#}<script type="text/javascript">/*<![CDATA[*/slidefootnotes += "<div class='footnote'>[{1}] : {2}</div>" ;/*]]>*/</script>
{2#}[{1}]

[callout-inlinemacro]
ifndef::icons[]
<b>&lt;{index}&gt;</b>
endif::icons[]
ifdef::icons[]
ifndef::data-uri[]
<object data="{icon={iconsdir}/callouts/{index}.svg}" type="image/svg+xml" title="{index}" width="{slidecalloutwidth=4%}">
<img src="{icon={iconsdir}/callouts/{index}.png}" alt="{index}" />
</object>
endif::data-uri[]
ifdef::data-uri[]
<object data="{icon={iconsdir}/callouts/{index}.svg}" type="image/svg+xml" title="{index}" width="{slidecalloutwidth=4%}">
<img alt="{index}" src="data:image/png;base64,
{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/callouts/{index}.png}")}"}" />
</object>
endif::data-uri[]
endif::icons[]


[listtags-bulleted]
list={title?<div class="title">{title}</div>}<ul{id? id="{id}"} class="{incremental? incremental}{role? {role}}">|</ul>
item=<li>|</li>
text=<span>|</span>

[listtags-numbered]
# The start attribute is not valid XHTML 1.1 but all browsers support it.
list={title?<div class="title">{title}</div>}<ol{id? id="{id}"} class="{style}{incremental? incremental}{role? {role}}"{start? start="{start}"}>|</ol>
item=<li>|</li>
text=<span>|</span>

[listtags-labeled]
list=<div class="dlist{compact-option? compact}{role? {role}}"{id? id="{id}"}>{title?<div class="title">{title}</div>}<dl class="{incremental? incremental}{role? {role}}">|</dl></div>
entry=
label=
term=<dt class="hdlist1{strong-option? strong}">|</dt>
item=<dd>|</dd>
text=<p>|</p>

[listtags-qanda]
list=<div class="qlist{style? {style}}{role? {role}}"{id? id="{id}"}>{title?<div class="title">{title}</div>}<ol>|</ol></div>
entry=<li{incremental? class="incremental"}>|</li>
label=
term=<p><em>|</em></p>
item=
text=<p>|</p>

[listtags-callout]
ifndef::icons[]
list=<div class="colist{style? {style}}{role? {role}}"{id? id="{id}"}>{title?<div class="title">{title}</div>}<ol>|</ol></div>
item=<li{incremental? class="incremental"}>|</li>
text=<p>|</p>
endif::icons[]
ifdef::icons[]
list=<div class="colist{style? {style}}{role? {role}}"{id? id="{id}"}>{title?<div class="title">{title}</div>}<table><tbody{incremental? class="incremental"}>|</tbody></table></div>
ifndef::data-uri[]
item=<tr><td><object data="{icon={iconsdir}/callouts/{listindex}.svg}" type="image/svg+xml" title="{listindex}" width="{slidecalloutwidth=4%}"><img src="{iconsdir}/callouts/{listindex}.png" alt="{listindex}" /></object></td><td style="vertical-align: middle;">|</td></tr>
endif::data-uri[]
ifdef::data-uri[]
item=<tr><td><object data="{icon={iconsdir}/callouts/{listindex}.svg}" type="image/svg+xml" title="{listindex}" width="{slidecalloutwidth=4%}"><img alt="{listindex}" src="data:image/png;base64, {sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/callouts/{listindex}.png}")}"}" /></object></td><td style="vertical-align: middle;">|</td></tr>
endif::data-uri[]
text=|
endif::icons[]

# Paragraph substitution.
[paragraph]
<div class="paragraph{role? {role}}"{id? id="{id}"}>{title?<div class="title">{title}</div>}
{incremental#<div class="incremental">}
<p>
|
</p>
{incremental#</div>}
</div>

[admonitionparagraph]
# add an incremental div
<div class="admonitionblock{role? {role}}"{id? id="{id}"}>
<table><tr>
<td class="icon">
{data-uri%}{icons#}<img src="{icon={iconsdir}/{name}.png}" alt="{caption}" />
{data-uri#}{icons#}<img alt="{caption}" src="data:image/png;base64,
{data-uri#}{icons#}{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/{name}.png}")}"}" />
{icons%}<div class="title">{caption}</div>
</td>
<td class="content">
<div class="title">{title}</div>
{incremental#<div class="incremental"><p>}
|
{incremental#</p></div>}
</td>
</tr></table>
</div>

# Delimited blocks.
[listingblock]
<div class="listingblock{role? {role}}"{id? id="{id}"}>
<div class="title">{caption=}{title}</div>
<div class="content{incremental? incremental}">
<pre><tt>
|
</tt></pre>
</div></div>

[literalblock]
<div class="literalblock{role? {role}}"{id? id="{id}"}>
<div class="title">{title}</div>
<div class="content{incremental? incremental}">
<pre><tt>
|
</tt></pre>
</div></div>

[quoteblock]
<div class="quoteblock{role? {role}}"{id? id="{id}"}>
<div class="title">{title}</div>
<div class="content">
|
</div>
<div class="attribution{incremental? incremental}">
<em>{citetitle}</em>{attribution?<br />}
&#8212; {attribution}
</div></div>

[verseblock]
<div class="verseblock{role? {role}}"{id? id="{id}"}>
<div class="title">{title}</div>
<pre class="content{incremental? incremental}">
|
</pre>
<div class="attribution{incremental? incremental}">
<em>{citetitle}</em>{attribution?<br />}
&#8212; {attribution}
</div></div>

[table]
<div class="tableblock{role? {role}}"{id? id="{id}"}>
<table rules="{grid=all}"
style="margin-left:{align@left:0}{align@center|right:auto}; margin-right:{align@left|center:auto}{align@right:0};"
style="float:{float};"
{autowidth-option%}width="{tablepcwidth}%"
{autowidth-option#}{width#width="{tablepcwidth}%"}
frame="{frame%border}"
frame="{frame@topbot:hsides}{frame@all:border}{frame@none:void}{frame@sides:vsides}"
cellspacing="0" cellpadding="4">
<caption class="title">{caption={table-caption} {counter:table-number}. }{title}</caption>
{colspecs}
{headrows#}<thead>
{headrows}
{headrows#}</thead>
{footrows#}<tfoot>
{footrows}
{footrows#}</tfoot>
<tbody{incremental? class="incremental"}>
{bodyrows}
</tbody>
</table>
</div>


[preamble]
# ignored


[sect1]
{set:slidepagebreak}
<div class="slide {role? {role}}" {id? id="{id}"}><div>
  	<section>
  		<header>
  			<h2>{title}</h2>
		</header>
		|
	</section>
</div></div>

[header]
<!DOCTYPE HTML>

<html lang="en">

<head>
	<title>OpenTechSchool</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=1274, user-scalable=no">
ifdef::linkcss[]
	<link rel="stylesheet" href="../../theme/style.css">
endif::linkcss[]
ifndef::linkcss[]
<style type="text/css">
include1::{stylesdir=../..}/theme/reset.css[]
</style>
<style type="text/css">
include1::{stylesdir=../..}/theme/style.css[]
</style>
endif::linkcss[]
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset={encoding}" />
	<meta name="copyright" content="{copyright=Copyright &#169; {author}}" />
	<meta name="generator" content="AsciiDoc {asciidoc-version} / otsslides backend {otsslides-backend-version}" />
	<meta name="description" content="{description}" />
	<meta name="keywords" content="{keywords}" />
	<meta name="duration" content="{duration}" />
	<meta name="presdate" content="{revdate}" />
	{corpname?<meta name="company" content="{corpname}" />}
	{slidefontsizeadjust#}<meta name="font-size-adjustment" content="{slidefontsizeadjust}" />
	<title>{title}</title>
	{title%}<title>{doctitle=}</title> 

ifdef::linkcss[]
  <script type="text/javascript" src="//use.typekit.net/ayv2sls.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>	
endif::linkcss[]
</head>

ifdef::pygments[]
<style type="text/css">
include1::{stylesdir={asciidoc-confdir}/stylesheets}/pygments.css[]
</style>
endif::pygments[]

ifdef::asciimath[]
ifdef::linkcss[]
<script type="text/javascript" src="{scriptsdir={asciidoc-confdir}/javascripts}/ASCIIMathML.js"></script>
endif::linkcss[]
ifndef::linkcss[]
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir={asciidoc-confdir}/javascripts}/ASCIIMathML.js[]
/*]]>*/
</script>
endif::linkcss[]
endif::asciimath[]
ifdef::latexmath[]
ifdef::linkcss[]
<script type="text/javascript" src="{scriptsdir={asciidoc-confdir}/javascripts}/LaTeXMathML.js"></script>
endif::linkcss[]
ifndef::linkcss[]
<script type="text/javascript">
# Escape as CDATA to pass validators.
/*<![CDATA[*/
include1::{scriptsdir=./javascripts}/LaTeXMathML.js[]
/*]]>*/
</script>
endif::linkcss[]
endif::latexmath[]
</head>
<body class="list">
  <nav class="meta">
    <div class="container">
      <a class="logo" href="http://opentechschool.org">OpenTechSchool</a>
    </div>
  </nav>
    
  	<header class="caption">
  		<h1>{doctitle}</h1>
  		<p>{subtitle}</p>
		<h3>{author}{corpname? — {corpname}}</h3>
		<h4>{revdate}</h4>
  	</header>

[footer]
	
  	<!--
  		To hide progress bar from entire presentation
  		just remove “progress” element.
  		-->
  	<div class="progress"><div></div></div>

  </section>
	
	<script src="../../lib/shower/scripts/script.js"></script>
</body>
</html>
